services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.3.2
    container_name: keycloak
    command: start
    environment:
      # --- Keycloak Admin ---
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USER}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      # --- Database Connection ---
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: ${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}

      # --- Reverse Proxy Configuration ---
      KC_PROXY: edge
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
    volumes:
      - ./keycloak_data:/opt/keycloak/data
    networks:
      - default
      - traefik-proxy
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      # --- Traefik Labels ---
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`${KEYCLOAK_HOSTNAME}`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.routers.keycloak.service=keycloak"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: keycloak_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      # CHANGED: Use a local bind mount instead of a named volume.
      # This maps the container's data directory to a local folder.
      - ./keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
networks:
  traefik-proxy:
    external: true
